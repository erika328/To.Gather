<div class="navbar bg-primary text-gray-600">
  <div class="flex-none space-x-3">
    <!-- アカウント設定 -->
    <button class="btn btn-secondary" onclick="my_modal_3.showModal()"><i class="fa-solid fa-gear fa-xl"></i></button>
      <dialog id="my_modal_3" class="modal">
        <div class="modal-box">
          <form method="dialog">
            <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">✕</button>
          </form>
          <%= render 'users/settings_form' %>
        </div>
      </dialog>

    <!-- グループ選択 -->
    <div class="drawer">
      <input id="my-drawer" type="checkbox" class="drawer-toggle" />
    <div class="drawer-content">
      <!-- Page content here -->
      <label for="my-drawer" class="btn btn-secondary drawer-button">
      <i class="fa-regular fa-calendar-check fa-xl"></i></label>
    </div> 
    <div class="drawer-side z-10">
      <label for="my-drawer" aria-label="close sidebar" class="drawer-overlay"></label>
      <ul class="menu p-4 w-80 min-h-full bg-secondary text-base-content">
        <li class="menu-title hover:text-white transition-all duration-300"">
          <%= link_to new_group_path do %>
            <i class="fa-solid fa-plus"></i> グループを作る
          <% end %>
        </li>

        <li class="menu-title">グループを選ぶ</li>
          <% if @user_groups.present? %>
            <% @user_groups.each do |group| %>
              <li>
                <%= link_to group.title, group_events_path(group), class: "ml-2 hover:text-white transition-all duration-300" %>
              </li>
            <% end %>
          <% end %>
      </ul>
    </div>
  </div>
  <!-- 通知 -->
  <div class="dropdown">
    <div class="indicator">
    <% if @notifications.present? && @notifications.reject(&:self_chat_notification?).any? %>
       <span class="indicator-item badge badge-accent"><%= @notifications.reject(&:self_chat_notification?).count %></span>
       <% end %> 
    <div tabindex="0" role="button" class="btn btn-secondary m-1"><i class="fa-regular fa-bell fa-xl"></i></div>
          </div>
      <ul tabindex="0" class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-52">
        <li class="menu-title">通知</li>
          <%= turbo_frame_tag 'notifications' do %>
            <% if @notifications.present? && @notifications.reject(&:self_chat_notification?).any? %>
              <li class="menu-title">
                <%= link_to destroy_all_notifications_path, remote: true, data: { turbo_method: :delete }, class: 'text-dark' do %>
                  全て既読にする
                <% end %>
              </i>
              <% @notifications.each do |notification| %>
                <i><%= render 'notifications/notification', notification: notification %></i>
              <% end %>
                <% else %>
              通知はありません
           <% end %>
          <% end %>
      </ul>
   </div>
</div>

  <!-- ホームボタン&ユーザー名表示 -->
<div class="flex-1">
  <%= link_to current_user.name, root_path, class: "btn btn-ghost text-xl" %>
</div>

  <!-- ハンバーガーメニュー -->
<div class="flex-none">
  <div class="drawer drawer-end">
    <input id="my-drawer-4" type="checkbox" class="drawer-toggle" />
    <div class="drawer-content">
      <label for="my-drawer-4" class="drawer-button btn btn-primary"><i class="fa-solid fa-bars fa-xl cursor-pointer" ></i></label>
    </div> 
    <div class="drawer-side z-10">
      <label for="my-drawer-4" aria-label="close sidebar" class="drawer-overlay"></label>
      <ul class="menu p-4 w-80 min-h-full bg-primary text-base-content">
        <li class="menu-title">Menu</li>
        <li><%= link_to 'マイカレンダー', '#', class: "ml-2 hover:text-white transition-all duration-300"%></li>
        <li><%= link_to 'ログアウト', destroy_user_session_path, class: "ml-2 hover:text-white transition-all duration-300" %></li>
      </ul>
    </div>
 </div>
</div>
</div>
</div>

<script>
      // Open modal function
      function openUserSettingModal() {
        document.getElementById('userSettingModal').classList.remove('hidden');
      }

      // Close modal function
      function closeUserSettingModal() {
        document.getElementById('userSettingModal').classList.add('hidden');
      }

      // Add event listeners to open and close the modal
      document.getElementById('openUserSettingModalButton').addEventListener('click', openUserSettingModal);
      document.getElementById('closeUserSettingModal').addEventListener('click', closeUserSettingModal);
      document.querySelector('.modal-overlay').addEventListener('click', closeUserSettingModal);
    </script>






